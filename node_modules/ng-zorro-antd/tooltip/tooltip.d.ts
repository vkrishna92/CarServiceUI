/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { Directionality } from '@angular/cdk/bidi';
import { ChangeDetectorRef, ComponentRef, ElementRef, EventEmitter, Renderer2, ViewContainerRef } from '@angular/core';
import { NzPresetColor } from 'ng-zorro-antd/core/color';
import { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';
import { BooleanInput, NgStyleInterface, NzTSType } from 'ng-zorro-antd/core/types';
import { NzTooltipBaseComponent, NzTooltipBaseDirective, NzTooltipTrigger, PropertyMapping } from './base';
import * as i0 from "@angular/core";
export declare class NzTooltipDirective extends NzTooltipBaseDirective {
    static ngAcceptInputType_nzTooltipArrowPointAtCenter: BooleanInput;
    title?: NzTSType | null;
    titleContext?: Object | null;
    directiveTitle?: NzTSType | null;
    trigger?: NzTooltipTrigger;
    placement?: string | string[];
    origin?: ElementRef<HTMLElement>;
    visible?: boolean;
    mouseEnterDelay?: number;
    mouseLeaveDelay?: number;
    overlayClassName?: string;
    overlayStyle?: NgStyleInterface;
    arrowPointAtCenter?: boolean;
    cdkConnectedOverlayPush?: boolean;
    nzTooltipColor?: string;
    readonly visibleChange: EventEmitter<boolean>;
    componentRef: ComponentRef<NzToolTipComponent>;
    constructor(elementRef: ElementRef, hostView: ViewContainerRef, renderer: Renderer2, noAnimation?: NzNoAnimationDirective);
    protected getProxyPropertyMap(): PropertyMapping;
    static ɵfac: i0.ɵɵFactoryDeclaration<NzTooltipDirective, [null, null, null, { optional: true; host: true; }]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NzTooltipDirective, "[nz-tooltip]", ["nzTooltip"], { "title": { "alias": "nzTooltipTitle"; "required": false; }; "titleContext": { "alias": "nzTooltipTitleContext"; "required": false; }; "directiveTitle": { "alias": "nz-tooltip"; "required": false; }; "trigger": { "alias": "nzTooltipTrigger"; "required": false; }; "placement": { "alias": "nzTooltipPlacement"; "required": false; }; "origin": { "alias": "nzTooltipOrigin"; "required": false; }; "visible": { "alias": "nzTooltipVisible"; "required": false; }; "mouseEnterDelay": { "alias": "nzTooltipMouseEnterDelay"; "required": false; }; "mouseLeaveDelay": { "alias": "nzTooltipMouseLeaveDelay"; "required": false; }; "overlayClassName": { "alias": "nzTooltipOverlayClassName"; "required": false; }; "overlayStyle": { "alias": "nzTooltipOverlayStyle"; "required": false; }; "arrowPointAtCenter": { "alias": "nzTooltipArrowPointAtCenter"; "required": false; }; "cdkConnectedOverlayPush": { "alias": "cdkConnectedOverlayPush"; "required": false; }; "nzTooltipColor": { "alias": "nzTooltipColor"; "required": false; }; }, { "visibleChange": "nzTooltipVisibleChange"; }, never, never, true, never>;
}
export declare class NzToolTipComponent extends NzTooltipBaseComponent {
    nzTitle: NzTSType | null;
    nzTitleContext: Object | null;
    nzColor?: string | NzPresetColor;
    _contentStyleMap: NgStyleInterface;
    constructor(cdr: ChangeDetectorRef, directionality: Directionality, noAnimation?: NzNoAnimationDirective);
    protected isEmpty(): boolean;
    protected updateStyles(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NzToolTipComponent, [null, { optional: true; }, { optional: true; host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NzToolTipComponent, "nz-tooltip", ["nzTooltipComponent"], {}, {}, never, never, true, never>;
}
