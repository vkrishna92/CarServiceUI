{"version":3,"file":"ng-zorro-antd-alert.mjs","sources":["../../components/alert/alert.component.ts","../../components/alert/alert.module.ts","../../components/alert/public-api.ts","../../components/alert/ng-zorro-antd-alert.ts"],"sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { slideAlertMotion } from 'ng-zorro-antd/core/animation';\nimport { NzConfigKey, NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nconst NZ_CONFIG_MODULE_NAME: NzConfigKey = 'alert';\n\n@Component({\n  selector: 'nz-alert',\n  exportAs: 'nzAlert',\n  animations: [slideAlertMotion],\n  standalone: true,\n  imports: [NzIconModule, NzOutletModule],\n  template: `\n    @if (!closed) {\n      <div\n        class=\"ant-alert\"\n        [class.ant-alert-rtl]=\"dir === 'rtl'\"\n        [class.ant-alert-success]=\"nzType === 'success'\"\n        [class.ant-alert-info]=\"nzType === 'info'\"\n        [class.ant-alert-warning]=\"nzType === 'warning'\"\n        [class.ant-alert-error]=\"nzType === 'error'\"\n        [class.ant-alert-no-icon]=\"!nzShowIcon\"\n        [class.ant-alert-banner]=\"nzBanner\"\n        [class.ant-alert-closable]=\"nzCloseable\"\n        [class.ant-alert-with-description]=\"!!nzDescription\"\n        [@.disabled]=\"nzNoAnimation\"\n        [@slideAlertMotion]\n        (@slideAlertMotion.done)=\"onFadeAnimationDone()\"\n      >\n        @if (nzShowIcon) {\n          <div class=\"ant-alert-icon\">\n            @if (nzIcon) {\n              <ng-container *nzStringTemplateOutlet=\"nzIcon\"></ng-container>\n            } @else {\n              <span nz-icon [nzType]=\"nzIconType || inferredIconType\" [nzTheme]=\"iconTheme\"></span>\n            }\n          </div>\n        }\n\n        @if (nzMessage || nzDescription) {\n          <div class=\"ant-alert-content\">\n            @if (nzMessage) {\n              <span class=\"ant-alert-message\">\n                <ng-container *nzStringTemplateOutlet=\"nzMessage\">{{ nzMessage }}</ng-container>\n              </span>\n            }\n            @if (nzDescription) {\n              <span class=\"ant-alert-description\">\n                <ng-container *nzStringTemplateOutlet=\"nzDescription\">{{ nzDescription }}</ng-container>\n              </span>\n            }\n          </div>\n        }\n\n        @if (nzAction) {\n          <div class=\"ant-alert-action\">\n            <ng-container *nzStringTemplateOutlet=\"nzAction\">{{ nzAction }}</ng-container>\n          </div>\n        }\n\n        @if (nzCloseable || nzCloseText) {\n          <button type=\"button\" tabindex=\"0\" class=\"ant-alert-close-icon\" (click)=\"closeAlert()\">\n            @if (nzCloseText) {\n              <ng-container *nzStringTemplateOutlet=\"nzCloseText\">\n                <span class=\"ant-alert-close-text\">{{ nzCloseText }}</span>\n              </ng-container>\n            } @else {\n              <span nz-icon nzType=\"close\"></span>\n            }\n          </button>\n        }\n      </div>\n    }\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false\n})\nexport class NzAlertComponent implements OnChanges, OnDestroy, OnInit {\n  readonly _nzModuleName: NzConfigKey = NZ_CONFIG_MODULE_NAME;\n  static ngAcceptInputType_nzCloseable: BooleanInput;\n  static ngAcceptInputType_nzShowIcon: BooleanInput;\n  static ngAcceptInputType_nzBanner: BooleanInput;\n  static ngAcceptInputType_nzNoAnimation: BooleanInput;\n\n  @Input() nzAction: string | TemplateRef<void> | null = null;\n  @Input() nzCloseText: string | TemplateRef<void> | null = null;\n  @Input() nzIconType: string | null = null;\n  @Input() nzMessage: string | TemplateRef<void> | null = null;\n  @Input() nzDescription: string | TemplateRef<void> | null = null;\n  @Input() nzType: 'success' | 'info' | 'warning' | 'error' = 'info';\n  @Input() @WithConfig() @InputBoolean() nzCloseable: boolean = false;\n  @Input() @WithConfig() @InputBoolean() nzShowIcon: boolean = false;\n  @Input() @InputBoolean() nzBanner = false;\n  @Input() @InputBoolean() nzNoAnimation = false;\n  @Input() nzIcon: string | TemplateRef<void> | null = null;\n  @Output() readonly nzOnClose = new EventEmitter<boolean>();\n  closed = false;\n  iconTheme: 'outline' | 'fill' = 'fill';\n  inferredIconType: string = 'info-circle';\n  dir: Direction = 'ltr';\n  private isTypeSet = false;\n  private isShowIconSet = false;\n  private destroy$ = new Subject<boolean>();\n\n  constructor(\n    public nzConfigService: NzConfigService,\n    private cdr: ChangeDetectorRef,\n    @Optional() private directionality: Directionality\n  ) {\n    this.nzConfigService\n      .getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.cdr.markForCheck();\n      });\n  }\n\n  ngOnInit(): void {\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n\n    this.dir = this.directionality.value;\n  }\n\n  closeAlert(): void {\n    this.closed = true;\n  }\n\n  onFadeAnimationDone(): void {\n    if (this.closed) {\n      this.nzOnClose.emit(true);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzShowIcon, nzDescription, nzType, nzBanner } = changes;\n    if (nzShowIcon) {\n      this.isShowIconSet = true;\n    }\n    if (nzType) {\n      this.isTypeSet = true;\n      switch (this.nzType) {\n        case 'error':\n          this.inferredIconType = 'close-circle';\n          break;\n        case 'success':\n          this.inferredIconType = 'check-circle';\n          break;\n        case 'info':\n          this.inferredIconType = 'info-circle';\n          break;\n        case 'warning':\n          this.inferredIconType = 'exclamation-circle';\n          break;\n      }\n    }\n    if (nzDescription) {\n      this.iconTheme = this.nzDescription ? 'outline' : 'fill';\n    }\n    if (nzBanner) {\n      if (!this.isTypeSet) {\n        this.nzType = 'warning';\n      }\n      if (!this.isShowIconSet) {\n        this.nzShowIcon = true;\n      }\n    }\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NgModule } from '@angular/core';\n\nimport { NzAlertComponent } from './alert.component';\n\n@NgModule({\n  exports: [NzAlertComponent],\n  imports: [NzAlertComponent]\n})\nexport class NzAlertModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './alert.component';\nexport * from './alert.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}